pipeline {
  agent any

  environment {
    DOCKER_IMAGE = 'shaliga/car-image:latest'
    DOCKERHUB_CREDENTIALS_ID = '775af07e-8c46-48ed-b2c1-b30348a48c73'
    GIT_CREDENTIALS_ID = '50659e61-283d-4def-8788-159e2b151468'
    KUBECONFIG_PATH = '/var/lib/jenkins/.kube/config'
    PATH = "/usr/local/bin:$PATH"
  }

  stages {
    stage('Checkout Code') {
      steps {
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[
            url: 'https://github.com/shaligatv/project3.git',
            credentialsId: "${GIT_CREDENTIALS_ID}"
          ]]
        ])
      }
    }

    stage('Install Dependencies & Run Tests') {
      steps {
        dir('car-app') {
          sh '''
            echo "Node Version:"
            node -v
            echo "Installing dependencies..."
            npm install
            echo "Running tests..."
            npm test
          '''
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        echo 'Building Docker image...'
        sh 'docker build -t $DOCKER_IMAGE car-app'
      }
    }

    stage('Push Docker Image') {
      steps {
        withCredentials([usernamePassword(
          credentialsId: "${DOCKERHUB_CREDENTIALS_ID}",
          usernameVariable: 'DOCKER_USER',
          passwordVariable: 'DOCKER_PASS'
        )]) {
          sh '''
            echo "Logging in to Docker Hub..."
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            echo "Pushing Docker image..."
            docker push $DOCKER_IMAGE
          '''
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        withEnv(["KUBECONFIG=$KUBECONFIG_PATH"]) {
          sh '''
            echo "Deploying to Kubernetes..."
            kubectl apply -f car-app/k8s/deployment.yaml
            kubectl apply -f car-app/k8s/service.yaml
            kubectl set image deployment/car-app-deployment car-app=$DOCKER_IMAGE
          '''
        }
      }
    }
  }

  post {
    success {
      echo '✅ Deployment successful!'
    }
    failure {
      echo '❌ Deployment failed!'
    }
  }
}
 
